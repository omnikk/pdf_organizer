"""
–ì–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∏–ª–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
"""

import os
import sys
import time
import subprocess
from pathlib import Path
from datetime import datetime

class CertificateProcessorInterface:
    def __init__(self):
        self.base_dir = Path.cwd()
        self.scripts = {
            '1': {
                'name': '1.new2.py',
                'description': '–û–±—Ä–∞–±–æ—Ç–∫–∞ PDF —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ (OCR)',
                'details': '–ò–∑–≤–ª–µ–∫–∞–µ—Ç –§–ò–û –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–∑ PDF, —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –ø–∞–ø–∫–∞–º'
            },
            '2': {
                'name': '2.folder_cleanup.py', 
                'description': '–û—á–∏—Å—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –ø–∞–ø–æ–∫',
                'details': '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –ø–∞–ø–æ–∫ —Å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏'
            },
            '3': {
                'name': '3.sunder.py',
                'description': '–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–∏—Ö –ø–∞–ø–æ–∫',
                'details': '–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –ø–∞–ø–∫–∏ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏'
            },
            '4': {
                'name': '4.FIO.py',
                'description': '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –§–ò–û –≤ –∏–º–µ–Ω–∞—Ö —Ñ–∞–π–ª–æ–≤',
                'details': '–ü—Ä–∏–≤–æ–¥–∏—Ç –§–ò–û –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –≤–∏–¥—É'
            }
        }
        
        self.session_log = []
    
    def check_script_exists(self, script_name):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞"""
        script_path = self.base_dir / script_name
        return script_path.exists()
    
    def check_dependencies(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫"""
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã...")
        
        issues = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã
        for script_info in self.scripts.values():
            if not self.check_script_exists(script_info['name']):
                issues.append(f"‚ùå –°–∫—Ä–∏–ø—Ç {script_info['name']} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫–∏
        input_dir = self.base_dir / "input"
        if not input_dir.exists():
            issues.append("‚ùå –ü–∞–ø–∫–∞ 'input' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            pdf_files = list(input_dir.glob("*.pdf"))
            if not pdf_files:
                issues.append("  –í –ø–∞–ø–∫–µ 'input' –Ω–µ—Ç PDF —Ñ–∞–π–ª–æ–≤")
            else:
                print(f" –ù–∞–π–¥–µ–Ω–æ {len(pdf_files)} PDF —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ 'input'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –ø–∞–∫–µ—Ç—ã (–æ—Å–Ω–æ–≤–Ω—ã–µ)
        required_packages = ['pandas', 'pathlib', 'cv2', 'easyocr', 'pdf2image']
        for package in required_packages:
            try:
                if package == 'cv2':
                    import cv2
                elif package == 'easyocr':
                    import easyocr
                elif package == 'pdf2image':
                    import pdf2image
                elif package == 'pandas':
                    import pandas
                else:
                    __import__(package)
            except ImportError:
                issues.append(f"  –ü–∞–∫–µ—Ç {package} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        if issues:
            print("\nüö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
            for issue in issues:
                print(f"   {issue}")
            print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ 4 —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ")
            print("   - –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É 'input' –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ç—É–¥–∞ PDF —Ñ–∞–π–ª—ã")
            print("   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã: pip install pandas opencv-python easyocr pdf2image")
            return False
        else:
            print(" –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
            return True
    
    def run_script(self, script_name, description):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç"""
        script_path = self.base_dir / script_name
        
        print(f"\n –ó–∞–ø—É—Å–∫: {description}")
        print(f"üìÑ –°–∫—Ä–∏–ø—Ç: {script_name}")
        print("=" * 60)
        
        start_time = time.time()
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤ —Ç–æ–º –∂–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–µ Python
            result = subprocess.run([sys.executable, str(script_path)], 
                                  capture_output=False, 
                                  text=True, 
                                  cwd=self.base_dir)
            
            elapsed_time = time.time() - start_time
            
            if result.returncode == 0:
                status = " –£–°–ü–ï–®–ù–û"
                self.session_log.append({
                    'script': script_name,
                    'status': 'SUCCESS',
                    'time': elapsed_time,
                    'timestamp': datetime.now().strftime('%H:%M:%S')
                })
            else:
                status = " –û–®–ò–ë–ö–ê"
                self.session_log.append({
                    'script': script_name,
                    'status': 'ERROR',
                    'time': elapsed_time,
                    'timestamp': datetime.now().strftime('%H:%M:%S')
                })
            
            print("=" * 60)
            print(f"{status} | –í—Ä–µ–º—è: {elapsed_time:.1f} —Å–µ–∫")
            
            return result.returncode == 0
            
        except Exception as e:
            print(f" –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            self.session_log.append({
                'script': script_name,
                'status': 'CRITICAL_ERROR',
                'time': time.time() - start_time,
                'timestamp': datetime.now().strftime('%H:%M:%S'),
                'error': str(e)
            })
            return False
    
    def run_all_scripts(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ"""
        print("\n –ü–û–õ–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í")
        print("=" * 60)
        print("–ë—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –≤—Å–µ —ç—Ç–∞–ø—ã:")
        print("1  –û–±—Ä–∞–±–æ—Ç–∫–∞ PDF ‚Üí –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
        print("2  –û—á–∏—Å—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –ø–∞–ø–æ–∫")
        print("3  –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–∏—Ö –ø–∞–ø–æ–∫")  
        print("4  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –§–ò–û –≤ —Ñ–∞–π–ª–∞—Ö")
        print("=" * 60)
        print(" –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
        
        start_time = time.time()
        successful_scripts = 0
        
        for script_num, script_info in self.scripts.items():
            print(f"\n –≠–¢–ê–ü {script_num}/4")
            
            success = self.run_script(script_info['name'], script_info['description'])
            
            if success:
                successful_scripts += 1
                print(f" –≠—Ç–∞–ø {script_num} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f" –≠—Ç–∞–ø {script_num} –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π")
                
                if script_num == '1':  # –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–µ —É–¥–∞–ª—Å—è
                    print(" –û–±—Ä–∞–±–æ—Ç–∫–∞ PDF –Ω–µ —É–¥–∞–ª–∞—Å—å. –û—Å—Ç–∞–ª—å–Ω—ã–µ —ç—Ç–∞–ø—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã.")
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
            if script_num != '4':
                time.sleep(1)
        
        total_time = time.time() - start_time
        
        print("\n" + "=" * 60)
        print(f" –ü–û–õ–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
        print(f"‚è±  –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time/60:.1f} –º–∏–Ω—É—Ç")
        print(f" –£—Å–ø–µ—à–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤: {successful_scripts}/4")
        
        if successful_scripts == 4:
            print(" –í—Å–µ —ç—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(" –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ '—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã'")
        else:
            print("  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç—Ç–∞–ø—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        
        self.show_session_summary()
    
    def show_session_summary(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–∫—É —Å–µ—Å—Å–∏–∏"""
        if not self.session_log:
            return
            
        print(f"\n –°–í–û–î–ö–ê –°–ï–°–°–ò–ò:")
        print("-" * 40)
        
        for entry in self.session_log:
            status_icon = {
                'SUCCESS': 'Yspex',
                'ERROR': 'error', 
                'CRITICAL_ERROR': '!!!!error'
            }.get(entry['status'], '?')
            
            print(f"{status_icon} {entry['timestamp']} | {entry['script']} | {entry['time']:.1f}—Å")
    
    def show_menu(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        while True:
            print("\n" + "=" * 60)
            print("            –°–ò–°–¢–ï–ú–ê –û–ë–†–ê–ë–û–¢–ö–ò –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í")
            print("=" * 60)
            print("     –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
            print("     0  –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–≤—Å–µ —ç—Ç–∞–ø—ã)")
            print("     9  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã")
            print()
            print(" –û–¢–î–ï–õ–¨–ù–´–ï –≠–¢–ê–ü–´:")
            
            for num, info in self.scripts.items():
                status = "_" if self.check_script_exists(info['name']) else "X"
                print(f"   {num} {status} {info['description']}")
                print(f"       {info['details']}")
            
            print()
            print("   q –í—ã—Ö–æ–¥")
            print("-" * 60)
            
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip().lower()
            
            if choice == 'q' or choice == 'quit' or choice == '–≤—ã—Ö–æ–¥':
                print(" –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
                
            elif choice == '0':
                if self.check_dependencies():
                    self.run_all_scripts()
                else:
                    input("\n –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –Ω–∞–∂–º–∏—Ç–µ Enter...")
                    
            elif choice == '9':
                self.check_dependencies()
                input("\n –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                
            elif choice in self.scripts:
                script_info = self.scripts[choice]
                if self.check_script_exists(script_info['name']):
                    self.run_script(script_info['name'], script_info['description'])
                else:
                    print(f" –°–∫—Ä–∏–ø—Ç {script_info['name']} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                input("\n –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                
            else:
                print(" –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
                time.sleep(1)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(" –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...")
    
    try:
        interface = CertificateProcessorInterface()
        interface.show_menu()
    except KeyboardInterrupt:
        print("\n\n –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()